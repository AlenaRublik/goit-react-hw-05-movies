{"version":3,"file":"static/js/544.87617089.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Layout/Layout.styled.jsx","components/Layout/Layout.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","components/Actor/Actor.styled.jsx","components/Actor/Actor.jsx","components/ReviewItem/ReviewItem.styled.jsx","components/ReviewItem/ReviewItem.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 25px;\n  margin-bottom: 40px;\n`;\n\nexport const Info = styled.p`\n  font-style: italic;\n  color: white;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/movieAPI/movieAPI';\nimport { Actor } from 'components';\nimport { Info, List } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(movieId).then(setCast).catch(console.log);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length ? (\n        <List>\n          {cast.map(actorInfo => (\n            <Actor key={actorInfo.id} {...actorInfo} />\n          ))}\n        </List>\n      ) : (\n        <Info>There are not information about movie cast </Info>\n      )}\n    </>\n  );\n};\n\nexport default Cast;","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Header = styled.header`\n  position: sticky;\n  top: 0;\n  padding: 10px;\n  z-index: 2;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: baseline;\n  justify-content:end;\n  margin-right: 83px;\n  gap: 30px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: #ffffff;\n  text-decoration: none;\n\n\n  &.active {\n    font-weight: 500;\n    font-size: 20px;\n    color: #e0228e;;\n  }\n`;","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Container, Header, Nav, StyledLink } from './Layout.styled';\n\nconst Layout = () => {\n  return (\n    <>\n      <Header>\n        <Container>\n          <Nav>\n            <StyledLink to=\"/\">Home</StyledLink>\n            <StyledLink to=\"/movies\">Movies</StyledLink>\n          </Nav>\n        </Container>\n      </Header>\n      <main>\n        <Container padding>\n          <Suspense fallback={<div>Please wait...</div>}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default Layout;","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 251px);\r\n  gap: 27px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-size: 12px;\r\n  transition: transform 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98),\r\n    box-shadow 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.05);\r\n    box-shadow: 3px 7px 5px 0px rgba(0,0,0,0.75);\r\n  }\r\n  overflow: hidden;\r\n  border-radius: 9px;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 271px;\r\n  height: 300px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  padding: 7px;\r\n  color: #e0228e;\r\n  /* background-color: #e0228e88; */\r\n`;\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { List, Img, Item, Title } from './MovieList.styled';\r\n\r\nexport const MovieList = ({ movies }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <List>\r\n      {movies.map(({ id, titleName, src }) => {\r\n        return (\r\n          <Item tabIndex={1} key={id}>\r\n            <Link to={`/movies/${id}`} state={{ from: location }}>\r\n              <Img src={src} alt={titleName} />\r\n              <Title>{titleName}</Title>\r\n            </Link>\r\n          </Item>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      titleName: PropTypes.string.isRequired,\r\n      src: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 22px;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-style: italic;\r\n  color: white;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchReviews } from 'services/movieAPI/movieAPI';\r\nimport { ReviewItem } from 'components';\r\nimport { Info, List } from './Reviews.styled';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchReviews(movieId)\r\n      .then(data => {\r\n        setReviews(data);\r\n      })\r\n      .catch(console.log);\r\n  }, [movieId]);\r\n  return (\r\n    <>\r\n      {reviews.length ? (\r\n        <List>\r\n          {reviews.map(review => (\r\n            <ReviewItem key={review.id} {...review} />\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Info>There are not any reviews for this movie yet </Info>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { Wrapper } from './Loader.styled';\r\n\r\nconst Loader = ({ visible }) => {\r\n  return (\r\n    <Wrapper>\r\n      <ThreeCircles\r\n        height=\"100\"\r\n        width=\"100\"\r\n        color=\"#e0228e\"\r\n            wrapperStyle={{}}\r\n        wrapperClass=\"\"\r\n        visible={visible}\r\n        ariaLabel=\"three-circles-rotating\"\r\n        outerCircleColor=\"\"\r\n        innerCircleColor=\"\"\r\n        middleCircleColor=\"\"\r\n      />\r\n  </Wrapper>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Loader;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const OutsideWrap = styled.div`\r\n  display: flex;\r\n  gap: 22px;\r\n  padding: 26px;\r\n  background-color: #e0228e72;\r\n  border: 1px solid #ffffff;\r\n  border-radius: 13px;\r\n`;\r\n\r\nexport const ImgWrap = styled.div`\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 280px;\r\n  height: 380px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const InsideWrap = styled.div`\r\n  font-size: 16px;\r\n  color: white;\r\n`;\r\n\r\nexport const MovieTitle = styled.h2`\r\n  margin-bottom: #ffffff;\r\n\r\n  font-size: 36px;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  color:#161515;\r\n  font-weight:500;\r\n`;\r\n\r\nexport const SubTitle = styled.h3`\r\n  margin-top: 16px;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  gap: 8px;\r\n  color:#161515;\r\n  font-weight:500;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  Img,\r\n  ImgWrap,\r\n  InsideWrap,\r\n  List,\r\n  MovieTitle,\r\n  OutsideWrap,\r\n  Span,\r\n  SubTitle,\r\n} from './Movie.styled';\r\n\r\nconst Movie = ({ movieData }) => {\r\n  return (\r\n    <>\r\n      <OutsideWrap>\r\n        <ImgWrap>\r\n          <Img src={movieData.src} alt={movieData.title} />\r\n        </ImgWrap>\r\n        <InsideWrap>\r\n          <MovieTitle>{movieData.title}</MovieTitle>\r\n          <div>\r\n            <p>\r\n              User score: <Span>{movieData.userScore}%</Span>\r\n            </p>\r\n            <SubTitle>Overview</SubTitle>\r\n            <p>{movieData.overview}</p>\r\n            <SubTitle>Genres</SubTitle>\r\n            <List>{movieData.genresList}</List>\r\n          </div>\r\n        </InsideWrap>\r\n      </OutsideWrap>\r\n    </>\r\n  );\r\n};\r\n\r\nMovie.propTypes = {\r\n  movieData: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    src: PropTypes.string.isRequired,\r\n    userScore: PropTypes.number.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    genresList: PropTypes.array.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n\n`;\n\nexport const Img = styled.img`\n  margin-bottom: 8px;\n  width: 200px;\n  height: 300px;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const Name = styled.h3`\n  margin-bottom: 4px;\n\n  font-size: 20px;\n  color: #ffffff;\n`;\n\nexport const Character = styled.p`\n  font-style: italic;\n  color: #e0228e;\n`;","import PropTypes from 'prop-types';\nimport { Img, Item, Name, Character } from './Actor.styled';\n\nconst Actor = ({ name, character, src }) => {\n  return (\n    <Item>\n      <Img src={src} alt={name} />\n      <Name>{name}</Name>\n      <Character>{character}</Character>\n    </Item>\n  );\n};\n\nActor.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n};\n\nexport default Actor;\n","import styled from '@emotion/styled';\r\nimport { RiUser5Line } from 'react-icons/ri';\r\n\r\n\r\nexport const Item = styled.li`\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-bottom: 8px;\r\n`;\r\nexport const StyledIcon = styled(RiUser5Line)`\r\nwidth:25px;\r\nheight:25px;\r\n  color: #e0228e;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  color: #ffffff;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Content, Item, StyledIcon, Title, Wrapper } from './ReviewItem.styled';\r\n\r\nconst ReviewItem = ({ author, content }) => {\r\n  return (\r\n    <Item>\r\n      <Wrapper>\r\n        <StyledIcon />\r\n        <Title>{author}</Title>\r\n      </Wrapper>\r\n      <Content>{content}</Content>\r\n    </Item>\r\n  );\r\n};\r\n\r\nReviewItem.propTypes = {\r\n  author: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ReviewItem;\r\n","import React from 'react';\nimport { Loader } from 'components';\nimport { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'services/movieAPI/movieAPI';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    setShowLoader(true);\n    fetchTrendingMovies()\n      .then(setTrendingMovies)\n      .catch(console.log)\n      .finally(() => setShowLoader(false));\n  }, []);\n\n  return (\n    <section>\n      <Loader visible={showLoader} />\n      {trendingMovies.length && <MovieList movies={trendingMovies} />}\n    </section>\n  );\n};\n\nexport default Home;"],"names":["List","styled","Info","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","catch","console","log","length","map","actorInfo","id","Container","Header","Nav","StyledLink","NavLink","to","padding","Suspense","fallback","Item","Img","Title","MovieList","movies","location","useLocation","titleName","src","tabIndex","state","from","alt","reviews","setReviews","fetchReviews","data","review","Wrapper","visible","height","width","color","wrapperStyle","wrapperClass","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","OutsideWrap","ImgWrap","InsideWrap","MovieTitle","Span","SubTitle","movieData","title","userScore","overview","genresList","Name","Character","name","character","StyledIcon","RiUser5Line","Content","author","content","trendingMovies","setTrendingMovies","showLoader","setShowLoader","fetchTrendingMovies","finally"],"sourceRoot":""}